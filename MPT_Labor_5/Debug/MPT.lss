
MPT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d02  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002c  00800060  00000d02  00000d76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000da2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e00  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003da  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001b6  00000000  00000000  000012be  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005aa  00000000  00000000  00001474  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e8  00000000  00000000  00001a20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000264  00000000  00000000  00001c08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003ad  00000000  00000000  00001e6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00002219  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e0       	ldi	r30, 0x02	; 2
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 38       	cpi	r26, 0x8C	; 140
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 03 02 	call	0x406	; 0x406 <main>
  7a:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <A_5_2_3>:

//##############################################################################

// A_5_2_3: Motorsteuerung mit einstellbarer Drehzahl, Stopfunktion und Terminalausgabe.
void A_5_2_3(void)
{
  82:	0f 93       	push	r16
  84:	1f 93       	push	r17
  86:	cf 93       	push	r28
  88:	df 93       	push	r29
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
  8e:	c8 56       	subi	r28, 0x68	; 104
  90:	d1 09       	sbc	r29, r1
  92:	0f b6       	in	r0, 0x3f	; 63
  94:	f8 94       	cli
  96:	de bf       	out	0x3e, r29	; 62
  98:	0f be       	out	0x3f, r0	; 63
  9a:	cd bf       	out	0x3d, r28	; 61
	// IHR_CODE_HIER ...
	
	//LED inititalisieren
	LED_DDR = 0xff;
  9c:	84 e3       	ldi	r24, 0x34	; 52
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	2f ef       	ldi	r18, 0xFF	; 255
  a2:	fc 01       	movw	r30, r24
  a4:	20 83       	st	Z, r18
	LED_PORT = ~0x01;
  a6:	85 e3       	ldi	r24, 0x35	; 53
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	2e ef       	ldi	r18, 0xFE	; 254
  ac:	fc 01       	movw	r30, r24
  ae:	20 83       	st	Z, r18
	
	//Richtungsregister initialisieren: Port 3 in PINB Ausgang des Wavefrontgenerators Pin 0 & 1 für Richtungssteuerung des Motors
	MOTOR_PWM_DDR = 0x0b;
  b0:	87 e3       	ldi	r24, 0x37	; 55
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	2b e0       	ldi	r18, 0x0B	; 11
  b6:	fc 01       	movw	r30, r24
  b8:	20 83       	st	Z, r18
	MOTOR_DIR_PORT = 0x02;
  ba:	88 e3       	ldi	r24, 0x38	; 56
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	22 e0       	ldi	r18, 0x02	; 2
  c0:	fc 01       	movw	r30, r24
  c2:	20 83       	st	Z, r18
	//String für Terminal Ausgabe
	//char* string = malloc(200);
	char string[100];
	
	//usart initalisieren
	UsartInit(8, 1, 0, 9600);
  c4:	00 e8       	ldi	r16, 0x80	; 128
  c6:	15 e2       	ldi	r17, 0x25	; 37
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	40 e0       	ldi	r20, 0x00	; 0
  ce:	61 e0       	ldi	r22, 0x01	; 1
  d0:	88 e0       	ldi	r24, 0x08	; 8
  d2:	0e 94 39 02 	call	0x472	; 0x472 <UsartInit>
	
	//Timer0 auf phasenkorektes nicht invertierendes PWM-Signal initalisieren
	TCCR0 = 0b01100100;
  d6:	83 e5       	ldi	r24, 0x53	; 83
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	24 e6       	ldi	r18, 0x64	; 100
  dc:	fc 01       	movw	r30, r24
  de:	20 83       	st	Z, r18
	OCR0 = 0x30;
  e0:	8c e5       	ldi	r24, 0x5C	; 92
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	20 e3       	ldi	r18, 0x30	; 48
  e6:	fc 01       	movw	r30, r24
  e8:	20 83       	st	Z, r18
	TCNT0 = 0;
  ea:	82 e5       	ldi	r24, 0x52	; 82
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	fc 01       	movw	r30, r24
  f0:	10 82       	st	Z, r1
	
	//UsartPuts("Hallo");
	
	//Berechnung der Frequenz und Ausgabe auf dem Terminal
	int Periode = ((uint32_t)(2*1024) * (uint32_t)(OCR0+1))/((uint32_t)F_CPU/(uint32_t)1000000);
  f2:	8c e5       	ldi	r24, 0x5C	; 92
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	fc 01       	movw	r30, r24
  f8:	80 81       	ld	r24, Z
  fa:	88 2f       	mov	r24, r24
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	01 96       	adiw	r24, 0x01	; 1
 100:	09 2e       	mov	r0, r25
 102:	00 0c       	add	r0, r0
 104:	aa 0b       	sbc	r26, r26
 106:	bb 0b       	sbc	r27, r27
 108:	07 2e       	mov	r0, r23
 10a:	7b e0       	ldi	r23, 0x0B	; 11
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	aa 1f       	adc	r26, r26
 112:	bb 1f       	adc	r27, r27
 114:	7a 95       	dec	r23
 116:	d1 f7       	brne	.-12     	; 0x10c <A_5_2_3+0x8a>
 118:	70 2d       	mov	r23, r0
 11a:	68 94       	set
 11c:	13 f8       	bld	r1, 3
 11e:	b6 95       	lsr	r27
 120:	a7 95       	ror	r26
 122:	97 95       	ror	r25
 124:	87 95       	ror	r24
 126:	16 94       	lsr	r1
 128:	d1 f7       	brne	.-12     	; 0x11e <A_5_2_3+0x9c>
 12a:	9a 83       	std	Y+2, r25	; 0x02
 12c:	89 83       	std	Y+1, r24	; 0x01
	int Frequenz = ((uint32_t)1000000)/Periode;
 12e:	89 81       	ldd	r24, Y+1	; 0x01
 130:	9a 81       	ldd	r25, Y+2	; 0x02
 132:	9c 01       	movw	r18, r24
 134:	99 0f       	add	r25, r25
 136:	44 0b       	sbc	r20, r20
 138:	55 0b       	sbc	r21, r21
 13a:	80 e4       	ldi	r24, 0x40	; 64
 13c:	92 e4       	ldi	r25, 0x42	; 66
 13e:	af e0       	ldi	r26, 0x0F	; 15
 140:	b0 e0       	ldi	r27, 0x00	; 0
 142:	bc 01       	movw	r22, r24
 144:	cd 01       	movw	r24, r26
 146:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__udivmodsi4>
 14a:	da 01       	movw	r26, r20
 14c:	c9 01       	movw	r24, r18
 14e:	9c 83       	std	Y+4, r25	; 0x04
 150:	8b 83       	std	Y+3, r24	; 0x03
	sprintf(string, "'%d\n'", Frequenz);
 152:	8c 81       	ldd	r24, Y+4	; 0x04
 154:	8f 93       	push	r24
 156:	8b 81       	ldd	r24, Y+3	; 0x03
 158:	8f 93       	push	r24
 15a:	83 e7       	ldi	r24, 0x73	; 115
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	89 2f       	mov	r24, r25
 160:	8f 93       	push	r24
 162:	83 e7       	ldi	r24, 0x73	; 115
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	8f 93       	push	r24
 168:	ce 01       	movw	r24, r28
 16a:	05 96       	adiw	r24, 0x05	; 5
 16c:	29 2f       	mov	r18, r25
 16e:	2f 93       	push	r18
 170:	8f 93       	push	r24
 172:	0e 94 95 03 	call	0x72a	; 0x72a <sprintf>
 176:	0f 90       	pop	r0
 178:	0f 90       	pop	r0
 17a:	0f 90       	pop	r0
 17c:	0f 90       	pop	r0
 17e:	0f 90       	pop	r0
 180:	0f 90       	pop	r0
	UsartPuts(string);
 182:	ce 01       	movw	r24, r28
 184:	05 96       	adiw	r24, 0x05	; 5
 186:	0e 94 4d 03 	call	0x69a	; 0x69a <UsartPuts>
	
	//Ausgabe der Drehzahlstufe
	UsartPuts("Drehzahlstufe 0x30");
 18a:	80 e6       	ldi	r24, 0x60	; 96
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	0e 94 4d 03 	call	0x69a	; 0x69a <UsartPuts>
	
	while(1){
		//Abfrage ob Taster gedrückt wurde
		if(BIT_IS_SET(TASTER_PIN, TASTER_UP) || BIT_IS_SET(TASTER_PIN, TASTER_DOWN)){
 192:	86 e3       	ldi	r24, 0x36	; 54
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	fc 01       	movw	r30, r24
 198:	80 81       	ld	r24, Z
 19a:	88 2f       	mov	r24, r24
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	80 74       	andi	r24, 0x40	; 64
 1a0:	99 27       	eor	r25, r25
 1a2:	89 2b       	or	r24, r25
 1a4:	39 f4       	brne	.+14     	; 0x1b4 <A_5_2_3+0x132>
 1a6:	86 e3       	ldi	r24, 0x36	; 54
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	fc 01       	movw	r30, r24
 1ac:	80 81       	ld	r24, Z
 1ae:	88 23       	and	r24, r24
 1b0:	0c f0       	brlt	.+2      	; 0x1b4 <A_5_2_3+0x132>
 1b2:	96 c0       	rjmp	.+300    	; 0x2e0 <A_5_2_3+0x25e>
			//Abfangen von Overflows und bestimmen des Verhaltens von OCR0
			if(BIT_IS_SET(TASTER_PIN, TASTER_UP) && OCR0 < 255){
 1b4:	86 e3       	ldi	r24, 0x36	; 54
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	fc 01       	movw	r30, r24
 1ba:	80 81       	ld	r24, Z
 1bc:	88 2f       	mov	r24, r24
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	80 74       	andi	r24, 0x40	; 64
 1c2:	99 27       	eor	r25, r25
 1c4:	89 2b       	or	r24, r25
 1c6:	71 f0       	breq	.+28     	; 0x1e4 <A_5_2_3+0x162>
 1c8:	8c e5       	ldi	r24, 0x5C	; 92
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	fc 01       	movw	r30, r24
 1ce:	80 81       	ld	r24, Z
 1d0:	8f 3f       	cpi	r24, 0xFF	; 255
 1d2:	41 f0       	breq	.+16     	; 0x1e4 <A_5_2_3+0x162>
				OCR0++;
 1d4:	8c e5       	ldi	r24, 0x5C	; 92
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	fc 01       	movw	r30, r24
 1da:	20 81       	ld	r18, Z
 1dc:	2f 5f       	subi	r18, 0xFF	; 255
 1de:	fc 01       	movw	r30, r24
 1e0:	20 83       	st	Z, r18
 1e2:	0d c0       	rjmp	.+26     	; 0x1fe <A_5_2_3+0x17c>
			}
			else if(OCR0 > 0){
 1e4:	8c e5       	ldi	r24, 0x5C	; 92
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	fc 01       	movw	r30, r24
 1ea:	80 81       	ld	r24, Z
 1ec:	88 23       	and	r24, r24
 1ee:	39 f0       	breq	.+14     	; 0x1fe <A_5_2_3+0x17c>
				OCR0--;
 1f0:	8c e5       	ldi	r24, 0x5C	; 92
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	fc 01       	movw	r30, r24
 1f6:	20 81       	ld	r18, Z
 1f8:	21 50       	subi	r18, 0x01	; 1
 1fa:	fc 01       	movw	r30, r24
 1fc:	20 83       	st	Z, r18
			}
			
			//ausgabe der neuen Frequenz an Terminal
			Periode = ((uint32_t)(2*1024) * (uint32_t)(OCR0+1))/((uint32_t)F_CPU/(uint32_t)1000000);
 1fe:	8c e5       	ldi	r24, 0x5C	; 92
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	fc 01       	movw	r30, r24
 204:	80 81       	ld	r24, Z
 206:	88 2f       	mov	r24, r24
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	01 96       	adiw	r24, 0x01	; 1
 20c:	09 2e       	mov	r0, r25
 20e:	00 0c       	add	r0, r0
 210:	aa 0b       	sbc	r26, r26
 212:	bb 0b       	sbc	r27, r27
 214:	07 2e       	mov	r0, r23
 216:	7b e0       	ldi	r23, 0x0B	; 11
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	aa 1f       	adc	r26, r26
 21e:	bb 1f       	adc	r27, r27
 220:	7a 95       	dec	r23
 222:	d1 f7       	brne	.-12     	; 0x218 <A_5_2_3+0x196>
 224:	70 2d       	mov	r23, r0
 226:	68 94       	set
 228:	13 f8       	bld	r1, 3
 22a:	b6 95       	lsr	r27
 22c:	a7 95       	ror	r26
 22e:	97 95       	ror	r25
 230:	87 95       	ror	r24
 232:	16 94       	lsr	r1
 234:	d1 f7       	brne	.-12     	; 0x22a <A_5_2_3+0x1a8>
 236:	9a 83       	std	Y+2, r25	; 0x02
 238:	89 83       	std	Y+1, r24	; 0x01
			Frequenz = ((uint32_t)1000000)/Periode;
 23a:	89 81       	ldd	r24, Y+1	; 0x01
 23c:	9a 81       	ldd	r25, Y+2	; 0x02
 23e:	9c 01       	movw	r18, r24
 240:	99 0f       	add	r25, r25
 242:	44 0b       	sbc	r20, r20
 244:	55 0b       	sbc	r21, r21
 246:	80 e4       	ldi	r24, 0x40	; 64
 248:	92 e4       	ldi	r25, 0x42	; 66
 24a:	af e0       	ldi	r26, 0x0F	; 15
 24c:	b0 e0       	ldi	r27, 0x00	; 0
 24e:	bc 01       	movw	r22, r24
 250:	cd 01       	movw	r24, r26
 252:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__udivmodsi4>
 256:	da 01       	movw	r26, r20
 258:	c9 01       	movw	r24, r18
 25a:	9c 83       	std	Y+4, r25	; 0x04
 25c:	8b 83       	std	Y+3, r24	; 0x03
			sprintf(string, "'%d\n'", Frequenz);
 25e:	8c 81       	ldd	r24, Y+4	; 0x04
 260:	8f 93       	push	r24
 262:	8b 81       	ldd	r24, Y+3	; 0x03
 264:	8f 93       	push	r24
 266:	83 e7       	ldi	r24, 0x73	; 115
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	89 2f       	mov	r24, r25
 26c:	8f 93       	push	r24
 26e:	83 e7       	ldi	r24, 0x73	; 115
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	8f 93       	push	r24
 274:	ce 01       	movw	r24, r28
 276:	05 96       	adiw	r24, 0x05	; 5
 278:	29 2f       	mov	r18, r25
 27a:	2f 93       	push	r18
 27c:	8f 93       	push	r24
 27e:	0e 94 95 03 	call	0x72a	; 0x72a <sprintf>
 282:	0f 90       	pop	r0
 284:	0f 90       	pop	r0
 286:	0f 90       	pop	r0
 288:	0f 90       	pop	r0
 28a:	0f 90       	pop	r0
 28c:	0f 90       	pop	r0
			UsartPuts(string);
 28e:	ce 01       	movw	r24, r28
 290:	05 96       	adiw	r24, 0x05	; 5
 292:	0e 94 4d 03 	call	0x69a	; 0x69a <UsartPuts>
			
			//Ausgabe der Drehzahlstufe
			sprintf(string, "Drehzahlstufe 0x%x", OCR0);
 296:	8c e5       	ldi	r24, 0x5C	; 92
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	fc 01       	movw	r30, r24
 29c:	80 81       	ld	r24, Z
 29e:	88 2f       	mov	r24, r24
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	29 2f       	mov	r18, r25
 2a4:	2f 93       	push	r18
 2a6:	8f 93       	push	r24
 2a8:	89 e7       	ldi	r24, 0x79	; 121
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	89 2f       	mov	r24, r25
 2ae:	8f 93       	push	r24
 2b0:	89 e7       	ldi	r24, 0x79	; 121
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	8f 93       	push	r24
 2b6:	ce 01       	movw	r24, r28
 2b8:	05 96       	adiw	r24, 0x05	; 5
 2ba:	29 2f       	mov	r18, r25
 2bc:	2f 93       	push	r18
 2be:	8f 93       	push	r24
 2c0:	0e 94 95 03 	call	0x72a	; 0x72a <sprintf>
 2c4:	0f 90       	pop	r0
 2c6:	0f 90       	pop	r0
 2c8:	0f 90       	pop	r0
 2ca:	0f 90       	pop	r0
 2cc:	0f 90       	pop	r0
 2ce:	0f 90       	pop	r0
			UsartPuts(string);
 2d0:	ce 01       	movw	r24, r28
 2d2:	05 96       	adiw	r24, 0x05	; 5
 2d4:	0e 94 4d 03 	call	0x69a	; 0x69a <UsartPuts>
			
			//Delay gegen Prellen
			Wait_x_ms(50);
 2d8:	82 e3       	ldi	r24, 0x32	; 50
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 0a 02 	call	0x414	; 0x414 <Wait_x_ms>
		}
		//Abfrage ob Taster-Stopp gedrückt wurde
		if(BIT_IS_SET(TASTER_PIN, TASTER_STOP)){
 2e0:	86 e3       	ldi	r24, 0x36	; 54
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	fc 01       	movw	r30, r24
 2e6:	80 81       	ld	r24, Z
 2e8:	88 2f       	mov	r24, r24
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	80 72       	andi	r24, 0x20	; 32
 2ee:	99 27       	eor	r25, r25
 2f0:	89 2b       	or	r24, r25
 2f2:	09 f4       	brne	.+2      	; 0x2f6 <A_5_2_3+0x274>
 2f4:	4e cf       	rjmp	.-356    	; 0x192 <A_5_2_3+0x110>
			OCR0 = 0;
 2f6:	8c e5       	ldi	r24, 0x5C	; 92
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	fc 01       	movw	r30, r24
 2fc:	10 82       	st	Z, r1
			MOTOR_DIR_PORT |= 3;
 2fe:	88 e3       	ldi	r24, 0x38	; 56
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	28 e3       	ldi	r18, 0x38	; 56
 304:	30 e0       	ldi	r19, 0x00	; 0
 306:	f9 01       	movw	r30, r18
 308:	20 81       	ld	r18, Z
 30a:	23 60       	ori	r18, 0x03	; 3
 30c:	fc 01       	movw	r30, r24
 30e:	20 83       	st	Z, r18
			
			//ausgabe der neuen Frequenz an Terminal
			Periode = ((uint32_t)(2*1024) * (uint32_t)(OCR0+1))/((uint32_t)F_CPU/(uint32_t)1000000);
 310:	8c e5       	ldi	r24, 0x5C	; 92
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	fc 01       	movw	r30, r24
 316:	80 81       	ld	r24, Z
 318:	88 2f       	mov	r24, r24
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	01 96       	adiw	r24, 0x01	; 1
 31e:	09 2e       	mov	r0, r25
 320:	00 0c       	add	r0, r0
 322:	aa 0b       	sbc	r26, r26
 324:	bb 0b       	sbc	r27, r27
 326:	07 2e       	mov	r0, r23
 328:	7b e0       	ldi	r23, 0x0B	; 11
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	aa 1f       	adc	r26, r26
 330:	bb 1f       	adc	r27, r27
 332:	7a 95       	dec	r23
 334:	d1 f7       	brne	.-12     	; 0x32a <A_5_2_3+0x2a8>
 336:	70 2d       	mov	r23, r0
 338:	68 94       	set
 33a:	13 f8       	bld	r1, 3
 33c:	b6 95       	lsr	r27
 33e:	a7 95       	ror	r26
 340:	97 95       	ror	r25
 342:	87 95       	ror	r24
 344:	16 94       	lsr	r1
 346:	d1 f7       	brne	.-12     	; 0x33c <A_5_2_3+0x2ba>
 348:	9a 83       	std	Y+2, r25	; 0x02
 34a:	89 83       	std	Y+1, r24	; 0x01
			Frequenz = ((uint32_t)1000000)/Periode;
 34c:	89 81       	ldd	r24, Y+1	; 0x01
 34e:	9a 81       	ldd	r25, Y+2	; 0x02
 350:	9c 01       	movw	r18, r24
 352:	99 0f       	add	r25, r25
 354:	44 0b       	sbc	r20, r20
 356:	55 0b       	sbc	r21, r21
 358:	80 e4       	ldi	r24, 0x40	; 64
 35a:	92 e4       	ldi	r25, 0x42	; 66
 35c:	af e0       	ldi	r26, 0x0F	; 15
 35e:	b0 e0       	ldi	r27, 0x00	; 0
 360:	bc 01       	movw	r22, r24
 362:	cd 01       	movw	r24, r26
 364:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__udivmodsi4>
 368:	da 01       	movw	r26, r20
 36a:	c9 01       	movw	r24, r18
 36c:	9c 83       	std	Y+4, r25	; 0x04
 36e:	8b 83       	std	Y+3, r24	; 0x03
			sprintf(string, "'%d\n'", Frequenz);
 370:	8c 81       	ldd	r24, Y+4	; 0x04
 372:	8f 93       	push	r24
 374:	8b 81       	ldd	r24, Y+3	; 0x03
 376:	8f 93       	push	r24
 378:	83 e7       	ldi	r24, 0x73	; 115
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	89 2f       	mov	r24, r25
 37e:	8f 93       	push	r24
 380:	83 e7       	ldi	r24, 0x73	; 115
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	8f 93       	push	r24
 386:	ce 01       	movw	r24, r28
 388:	05 96       	adiw	r24, 0x05	; 5
 38a:	29 2f       	mov	r18, r25
 38c:	2f 93       	push	r18
 38e:	8f 93       	push	r24
 390:	0e 94 95 03 	call	0x72a	; 0x72a <sprintf>
 394:	0f 90       	pop	r0
 396:	0f 90       	pop	r0
 398:	0f 90       	pop	r0
 39a:	0f 90       	pop	r0
 39c:	0f 90       	pop	r0
 39e:	0f 90       	pop	r0
			UsartPuts(string);
 3a0:	ce 01       	movw	r24, r28
 3a2:	05 96       	adiw	r24, 0x05	; 5
 3a4:	0e 94 4d 03 	call	0x69a	; 0x69a <UsartPuts>
			
			//Ausgabe der Drehzahlstufe
			sprintf(string, "Drehzahlstufe 0x%x", OCR0);
 3a8:	8c e5       	ldi	r24, 0x5C	; 92
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	fc 01       	movw	r30, r24
 3ae:	80 81       	ld	r24, Z
 3b0:	88 2f       	mov	r24, r24
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	29 2f       	mov	r18, r25
 3b6:	2f 93       	push	r18
 3b8:	8f 93       	push	r24
 3ba:	89 e7       	ldi	r24, 0x79	; 121
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	89 2f       	mov	r24, r25
 3c0:	8f 93       	push	r24
 3c2:	89 e7       	ldi	r24, 0x79	; 121
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	8f 93       	push	r24
 3c8:	ce 01       	movw	r24, r28
 3ca:	05 96       	adiw	r24, 0x05	; 5
 3cc:	29 2f       	mov	r18, r25
 3ce:	2f 93       	push	r18
 3d0:	8f 93       	push	r24
 3d2:	0e 94 95 03 	call	0x72a	; 0x72a <sprintf>
 3d6:	0f 90       	pop	r0
 3d8:	0f 90       	pop	r0
 3da:	0f 90       	pop	r0
 3dc:	0f 90       	pop	r0
 3de:	0f 90       	pop	r0
 3e0:	0f 90       	pop	r0
			UsartPuts(string);
 3e2:	ce 01       	movw	r24, r28
 3e4:	05 96       	adiw	r24, 0x05	; 5
 3e6:	0e 94 4d 03 	call	0x69a	; 0x69a <UsartPuts>
			
			//Delay gegen Prellen
			Wait_x_ms(50);
 3ea:	82 e3       	ldi	r24, 0x32	; 50
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	0e 94 0a 02 	call	0x414	; 0x414 <Wait_x_ms>
			
			//Motor nach bremsen wieder freischalten
			CLR_BIT(MOTOR_DIR_PORT, 0);
 3f2:	88 e3       	ldi	r24, 0x38	; 56
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	28 e3       	ldi	r18, 0x38	; 56
 3f8:	30 e0       	ldi	r19, 0x00	; 0
 3fa:	f9 01       	movw	r30, r18
 3fc:	20 81       	ld	r18, Z
 3fe:	2e 7f       	andi	r18, 0xFE	; 254
 400:	fc 01       	movw	r30, r24
 402:	20 83       	st	Z, r18
		}
	}
 404:	c6 ce       	rjmp	.-628    	; 0x192 <A_5_2_3+0x110>

00000406 <main>:

#include "Labor_5/MPT_LAB_5_1.h"
#include "Labor_5/MPT_LAB_5_2.h"

int main(void)
{
 406:	cf 93       	push	r28
 408:	df 93       	push	r29
 40a:	cd b7       	in	r28, 0x3d	; 61
 40c:	de b7       	in	r29, 0x3e	; 62
  // A_5_2_2: Motorsteuerung mit einstellbarer Drehzahl und Terminalausgabe.
  // A_5_2_3: Motorsteuerung mit einstellbarer Drehzahl, Stopfunktion und Terminalausgabe.
  //------------------------------------------------------------------------------
  //A_5_2_1();
  //A_5_2_2();
  A_5_2_3();
 40e:	0e 94 41 00 	call	0x82	; 0x82 <A_5_2_3>
	
	
  while(1)
  {
      //TODO:: Please write your application code 
  }
 412:	ff cf       	rjmp	.-2      	; 0x412 <main+0xc>

00000414 <Wait_x_ms>:
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	00 d0       	rcall	.+0      	; 0x41a <Wait_x_ms+0x6>
 41a:	00 d0       	rcall	.+0      	; 0x41c <Wait_x_ms+0x8>
 41c:	00 d0       	rcall	.+0      	; 0x41e <Wait_x_ms+0xa>
 41e:	cd b7       	in	r28, 0x3d	; 61
 420:	de b7       	in	r29, 0x3e	; 62
 422:	9e 83       	std	Y+6, r25	; 0x06
 424:	8d 83       	std	Y+5, r24	; 0x05
 426:	1c 82       	std	Y+4, r1	; 0x04
 428:	1b 82       	std	Y+3, r1	; 0x03
 42a:	12 c0       	rjmp	.+36     	; 0x450 <Wait_x_ms+0x3c>
 42c:	1a 82       	std	Y+2, r1	; 0x02
 42e:	19 82       	std	Y+1, r1	; 0x01
 430:	05 c0       	rjmp	.+10     	; 0x43c <Wait_x_ms+0x28>
 432:	89 81       	ldd	r24, Y+1	; 0x01
 434:	9a 81       	ldd	r25, Y+2	; 0x02
 436:	01 96       	adiw	r24, 0x01	; 1
 438:	9a 83       	std	Y+2, r25	; 0x02
 43a:	89 83       	std	Y+1, r24	; 0x01
 43c:	89 81       	ldd	r24, Y+1	; 0x01
 43e:	9a 81       	ldd	r25, Y+2	; 0x02
 440:	88 35       	cpi	r24, 0x58	; 88
 442:	92 40       	sbci	r25, 0x02	; 2
 444:	b0 f3       	brcs	.-20     	; 0x432 <Wait_x_ms+0x1e>
 446:	8b 81       	ldd	r24, Y+3	; 0x03
 448:	9c 81       	ldd	r25, Y+4	; 0x04
 44a:	01 96       	adiw	r24, 0x01	; 1
 44c:	9c 83       	std	Y+4, r25	; 0x04
 44e:	8b 83       	std	Y+3, r24	; 0x03
 450:	2b 81       	ldd	r18, Y+3	; 0x03
 452:	3c 81       	ldd	r19, Y+4	; 0x04
 454:	8d 81       	ldd	r24, Y+5	; 0x05
 456:	9e 81       	ldd	r25, Y+6	; 0x06
 458:	28 17       	cp	r18, r24
 45a:	39 07       	cpc	r19, r25
 45c:	38 f3       	brcs	.-50     	; 0x42c <Wait_x_ms+0x18>
 45e:	00 00       	nop
 460:	26 96       	adiw	r28, 0x06	; 6
 462:	0f b6       	in	r0, 0x3f	; 63
 464:	f8 94       	cli
 466:	de bf       	out	0x3e, r29	; 62
 468:	0f be       	out	0x3f, r0	; 63
 46a:	cd bf       	out	0x3d, r28	; 61
 46c:	df 91       	pop	r29
 46e:	cf 91       	pop	r28
 470:	08 95       	ret

00000472 <UsartInit>:
 472:	0f 93       	push	r16
 474:	1f 93       	push	r17
 476:	cf 93       	push	r28
 478:	df 93       	push	r29
 47a:	cd b7       	in	r28, 0x3d	; 61
 47c:	de b7       	in	r29, 0x3e	; 62
 47e:	27 97       	sbiw	r28, 0x07	; 7
 480:	0f b6       	in	r0, 0x3f	; 63
 482:	f8 94       	cli
 484:	de bf       	out	0x3e, r29	; 62
 486:	0f be       	out	0x3f, r0	; 63
 488:	cd bf       	out	0x3d, r28	; 61
 48a:	89 83       	std	Y+1, r24	; 0x01
 48c:	6a 83       	std	Y+2, r22	; 0x02
 48e:	4b 83       	std	Y+3, r20	; 0x03
 490:	0c 83       	std	Y+4, r16	; 0x04
 492:	1d 83       	std	Y+5, r17	; 0x05
 494:	2e 83       	std	Y+6, r18	; 0x06
 496:	3f 83       	std	Y+7, r19	; 0x07
 498:	8a 81       	ldd	r24, Y+2	; 0x02
 49a:	81 30       	cpi	r24, 0x01	; 1
 49c:	51 f4       	brne	.+20     	; 0x4b2 <UsartInit+0x40>
 49e:	80 e4       	ldi	r24, 0x40	; 64
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	20 e4       	ldi	r18, 0x40	; 64
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	f9 01       	movw	r30, r18
 4a8:	20 81       	ld	r18, Z
 4aa:	20 62       	ori	r18, 0x20	; 32
 4ac:	fc 01       	movw	r30, r24
 4ae:	20 83       	st	Z, r18
 4b0:	15 c0       	rjmp	.+42     	; 0x4dc <UsartInit+0x6a>
 4b2:	8a 81       	ldd	r24, Y+2	; 0x02
 4b4:	82 30       	cpi	r24, 0x02	; 2
 4b6:	51 f4       	brne	.+20     	; 0x4cc <UsartInit+0x5a>
 4b8:	80 e4       	ldi	r24, 0x40	; 64
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	20 e4       	ldi	r18, 0x40	; 64
 4be:	30 e0       	ldi	r19, 0x00	; 0
 4c0:	f9 01       	movw	r30, r18
 4c2:	20 81       	ld	r18, Z
 4c4:	20 63       	ori	r18, 0x30	; 48
 4c6:	fc 01       	movw	r30, r24
 4c8:	20 83       	st	Z, r18
 4ca:	08 c0       	rjmp	.+16     	; 0x4dc <UsartInit+0x6a>
 4cc:	80 e4       	ldi	r24, 0x40	; 64
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	20 e4       	ldi	r18, 0x40	; 64
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	f9 01       	movw	r30, r18
 4d6:	20 81       	ld	r18, Z
 4d8:	fc 01       	movw	r30, r24
 4da:	20 83       	st	Z, r18
 4dc:	8b 81       	ldd	r24, Y+3	; 0x03
 4de:	81 30       	cpi	r24, 0x01	; 1
 4e0:	49 f4       	brne	.+18     	; 0x4f4 <UsartInit+0x82>
 4e2:	80 e4       	ldi	r24, 0x40	; 64
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	20 e4       	ldi	r18, 0x40	; 64
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	f9 01       	movw	r30, r18
 4ec:	20 81       	ld	r18, Z
 4ee:	fc 01       	movw	r30, r24
 4f0:	20 83       	st	Z, r18
 4f2:	0c c0       	rjmp	.+24     	; 0x50c <UsartInit+0x9a>
 4f4:	8b 81       	ldd	r24, Y+3	; 0x03
 4f6:	82 30       	cpi	r24, 0x02	; 2
 4f8:	49 f4       	brne	.+18     	; 0x50c <UsartInit+0x9a>
 4fa:	80 e4       	ldi	r24, 0x40	; 64
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	20 e4       	ldi	r18, 0x40	; 64
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	f9 01       	movw	r30, r18
 504:	20 81       	ld	r18, Z
 506:	28 60       	ori	r18, 0x08	; 8
 508:	fc 01       	movw	r30, r24
 50a:	20 83       	st	Z, r18
 50c:	89 81       	ldd	r24, Y+1	; 0x01
 50e:	88 2f       	mov	r24, r24
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	87 30       	cpi	r24, 0x07	; 7
 514:	91 05       	cpc	r25, r1
 516:	c9 f0       	breq	.+50     	; 0x54a <UsartInit+0xd8>
 518:	88 30       	cpi	r24, 0x08	; 8
 51a:	91 05       	cpc	r25, r1
 51c:	34 f4       	brge	.+12     	; 0x52a <UsartInit+0xb8>
 51e:	85 30       	cpi	r24, 0x05	; 5
 520:	91 05       	cpc	r25, r1
 522:	d1 f1       	breq	.+116    	; 0x598 <UsartInit+0x126>
 524:	06 97       	sbiw	r24, 0x06	; 6
 526:	39 f0       	breq	.+14     	; 0x536 <UsartInit+0xc4>
 528:	38 c0       	rjmp	.+112    	; 0x59a <UsartInit+0x128>
 52a:	88 30       	cpi	r24, 0x08	; 8
 52c:	91 05       	cpc	r25, r1
 52e:	b9 f0       	breq	.+46     	; 0x55e <UsartInit+0xec>
 530:	09 97       	sbiw	r24, 0x09	; 9
 532:	f9 f0       	breq	.+62     	; 0x572 <UsartInit+0x100>
 534:	32 c0       	rjmp	.+100    	; 0x59a <UsartInit+0x128>
 536:	80 e4       	ldi	r24, 0x40	; 64
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	20 e4       	ldi	r18, 0x40	; 64
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	f9 01       	movw	r30, r18
 540:	20 81       	ld	r18, Z
 542:	22 60       	ori	r18, 0x02	; 2
 544:	fc 01       	movw	r30, r24
 546:	20 83       	st	Z, r18
 548:	28 c0       	rjmp	.+80     	; 0x59a <UsartInit+0x128>
 54a:	80 e4       	ldi	r24, 0x40	; 64
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	20 e4       	ldi	r18, 0x40	; 64
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	f9 01       	movw	r30, r18
 554:	20 81       	ld	r18, Z
 556:	24 60       	ori	r18, 0x04	; 4
 558:	fc 01       	movw	r30, r24
 55a:	20 83       	st	Z, r18
 55c:	1e c0       	rjmp	.+60     	; 0x59a <UsartInit+0x128>
 55e:	80 e4       	ldi	r24, 0x40	; 64
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	20 e4       	ldi	r18, 0x40	; 64
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	f9 01       	movw	r30, r18
 568:	20 81       	ld	r18, Z
 56a:	26 60       	ori	r18, 0x06	; 6
 56c:	fc 01       	movw	r30, r24
 56e:	20 83       	st	Z, r18
 570:	14 c0       	rjmp	.+40     	; 0x59a <UsartInit+0x128>
 572:	8a e2       	ldi	r24, 0x2A	; 42
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	2a e2       	ldi	r18, 0x2A	; 42
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	f9 01       	movw	r30, r18
 57c:	20 81       	ld	r18, Z
 57e:	24 60       	ori	r18, 0x04	; 4
 580:	fc 01       	movw	r30, r24
 582:	20 83       	st	Z, r18
 584:	80 e4       	ldi	r24, 0x40	; 64
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	20 e4       	ldi	r18, 0x40	; 64
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	f9 01       	movw	r30, r18
 58e:	20 81       	ld	r18, Z
 590:	26 60       	ori	r18, 0x06	; 6
 592:	fc 01       	movw	r30, r24
 594:	20 83       	st	Z, r18
 596:	01 c0       	rjmp	.+2      	; 0x59a <UsartInit+0x128>
 598:	00 00       	nop
 59a:	09 e2       	ldi	r16, 0x29	; 41
 59c:	10 e0       	ldi	r17, 0x00	; 0
 59e:	8c 81       	ldd	r24, Y+4	; 0x04
 5a0:	9d 81       	ldd	r25, Y+5	; 0x05
 5a2:	ae 81       	ldd	r26, Y+6	; 0x06
 5a4:	bf 81       	ldd	r27, Y+7	; 0x07
 5a6:	88 0f       	add	r24, r24
 5a8:	99 1f       	adc	r25, r25
 5aa:	aa 1f       	adc	r26, r26
 5ac:	bb 1f       	adc	r27, r27
 5ae:	88 0f       	add	r24, r24
 5b0:	99 1f       	adc	r25, r25
 5b2:	aa 1f       	adc	r26, r26
 5b4:	bb 1f       	adc	r27, r27
 5b6:	88 0f       	add	r24, r24
 5b8:	99 1f       	adc	r25, r25
 5ba:	aa 1f       	adc	r26, r26
 5bc:	bb 1f       	adc	r27, r27
 5be:	88 0f       	add	r24, r24
 5c0:	99 1f       	adc	r25, r25
 5c2:	aa 1f       	adc	r26, r26
 5c4:	bb 1f       	adc	r27, r27
 5c6:	9c 01       	movw	r18, r24
 5c8:	ad 01       	movw	r20, r26
 5ca:	80 e0       	ldi	r24, 0x00	; 0
 5cc:	94 e2       	ldi	r25, 0x24	; 36
 5ce:	a4 ef       	ldi	r26, 0xF4	; 244
 5d0:	b0 e0       	ldi	r27, 0x00	; 0
 5d2:	bc 01       	movw	r22, r24
 5d4:	cd 01       	movw	r24, r26
 5d6:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__udivmodsi4>
 5da:	da 01       	movw	r26, r20
 5dc:	c9 01       	movw	r24, r18
 5de:	81 50       	subi	r24, 0x01	; 1
 5e0:	f8 01       	movw	r30, r16
 5e2:	80 83       	st	Z, r24
 5e4:	00 e4       	ldi	r16, 0x40	; 64
 5e6:	10 e0       	ldi	r17, 0x00	; 0
 5e8:	8c 81       	ldd	r24, Y+4	; 0x04
 5ea:	9d 81       	ldd	r25, Y+5	; 0x05
 5ec:	ae 81       	ldd	r26, Y+6	; 0x06
 5ee:	bf 81       	ldd	r27, Y+7	; 0x07
 5f0:	88 0f       	add	r24, r24
 5f2:	99 1f       	adc	r25, r25
 5f4:	aa 1f       	adc	r26, r26
 5f6:	bb 1f       	adc	r27, r27
 5f8:	88 0f       	add	r24, r24
 5fa:	99 1f       	adc	r25, r25
 5fc:	aa 1f       	adc	r26, r26
 5fe:	bb 1f       	adc	r27, r27
 600:	88 0f       	add	r24, r24
 602:	99 1f       	adc	r25, r25
 604:	aa 1f       	adc	r26, r26
 606:	bb 1f       	adc	r27, r27
 608:	88 0f       	add	r24, r24
 60a:	99 1f       	adc	r25, r25
 60c:	aa 1f       	adc	r26, r26
 60e:	bb 1f       	adc	r27, r27
 610:	9c 01       	movw	r18, r24
 612:	ad 01       	movw	r20, r26
 614:	80 e0       	ldi	r24, 0x00	; 0
 616:	94 e2       	ldi	r25, 0x24	; 36
 618:	a4 ef       	ldi	r26, 0xF4	; 244
 61a:	b0 e0       	ldi	r27, 0x00	; 0
 61c:	bc 01       	movw	r22, r24
 61e:	cd 01       	movw	r24, r26
 620:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__udivmodsi4>
 624:	da 01       	movw	r26, r20
 626:	c9 01       	movw	r24, r18
 628:	01 97       	sbiw	r24, 0x01	; 1
 62a:	a1 09       	sbc	r26, r1
 62c:	b1 09       	sbc	r27, r1
 62e:	89 2f       	mov	r24, r25
 630:	9a 2f       	mov	r25, r26
 632:	ab 2f       	mov	r26, r27
 634:	bb 27       	eor	r27, r27
 636:	f8 01       	movw	r30, r16
 638:	80 83       	st	Z, r24
 63a:	8a e2       	ldi	r24, 0x2A	; 42
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	2a e2       	ldi	r18, 0x2A	; 42
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	f9 01       	movw	r30, r18
 644:	20 81       	ld	r18, Z
 646:	28 61       	ori	r18, 0x18	; 24
 648:	fc 01       	movw	r30, r24
 64a:	20 83       	st	Z, r18
 64c:	00 00       	nop
 64e:	27 96       	adiw	r28, 0x07	; 7
 650:	0f b6       	in	r0, 0x3f	; 63
 652:	f8 94       	cli
 654:	de bf       	out	0x3e, r29	; 62
 656:	0f be       	out	0x3f, r0	; 63
 658:	cd bf       	out	0x3d, r28	; 61
 65a:	df 91       	pop	r29
 65c:	cf 91       	pop	r28
 65e:	1f 91       	pop	r17
 660:	0f 91       	pop	r16
 662:	08 95       	ret

00000664 <UsartPutc>:
 664:	cf 93       	push	r28
 666:	df 93       	push	r29
 668:	1f 92       	push	r1
 66a:	cd b7       	in	r28, 0x3d	; 61
 66c:	de b7       	in	r29, 0x3e	; 62
 66e:	89 83       	std	Y+1, r24	; 0x01
 670:	00 00       	nop
 672:	8b e2       	ldi	r24, 0x2B	; 43
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	fc 01       	movw	r30, r24
 678:	80 81       	ld	r24, Z
 67a:	88 2f       	mov	r24, r24
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	80 72       	andi	r24, 0x20	; 32
 680:	99 27       	eor	r25, r25
 682:	89 2b       	or	r24, r25
 684:	b1 f3       	breq	.-20     	; 0x672 <UsartPutc+0xe>
 686:	8c e2       	ldi	r24, 0x2C	; 44
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	29 81       	ldd	r18, Y+1	; 0x01
 68c:	fc 01       	movw	r30, r24
 68e:	20 83       	st	Z, r18
 690:	00 00       	nop
 692:	0f 90       	pop	r0
 694:	df 91       	pop	r29
 696:	cf 91       	pop	r28
 698:	08 95       	ret

0000069a <UsartPuts>:
 69a:	cf 93       	push	r28
 69c:	df 93       	push	r29
 69e:	00 d0       	rcall	.+0      	; 0x6a0 <UsartPuts+0x6>
 6a0:	00 d0       	rcall	.+0      	; 0x6a2 <UsartPuts+0x8>
 6a2:	cd b7       	in	r28, 0x3d	; 61
 6a4:	de b7       	in	r29, 0x3e	; 62
 6a6:	9c 83       	std	Y+4, r25	; 0x04
 6a8:	8b 83       	std	Y+3, r24	; 0x03
 6aa:	8b 81       	ldd	r24, Y+3	; 0x03
 6ac:	9c 81       	ldd	r25, Y+4	; 0x04
 6ae:	9a 83       	std	Y+2, r25	; 0x02
 6b0:	89 83       	std	Y+1, r24	; 0x01
 6b2:	0b c0       	rjmp	.+22     	; 0x6ca <UsartPuts+0x30>
 6b4:	89 81       	ldd	r24, Y+1	; 0x01
 6b6:	9a 81       	ldd	r25, Y+2	; 0x02
 6b8:	fc 01       	movw	r30, r24
 6ba:	80 81       	ld	r24, Z
 6bc:	0e 94 32 03 	call	0x664	; 0x664 <UsartPutc>
 6c0:	89 81       	ldd	r24, Y+1	; 0x01
 6c2:	9a 81       	ldd	r25, Y+2	; 0x02
 6c4:	01 96       	adiw	r24, 0x01	; 1
 6c6:	9a 83       	std	Y+2, r25	; 0x02
 6c8:	89 83       	std	Y+1, r24	; 0x01
 6ca:	89 81       	ldd	r24, Y+1	; 0x01
 6cc:	9a 81       	ldd	r25, Y+2	; 0x02
 6ce:	fc 01       	movw	r30, r24
 6d0:	80 81       	ld	r24, Z
 6d2:	88 23       	and	r24, r24
 6d4:	79 f7       	brne	.-34     	; 0x6b4 <UsartPuts+0x1a>
 6d6:	00 00       	nop
 6d8:	0f 90       	pop	r0
 6da:	0f 90       	pop	r0
 6dc:	0f 90       	pop	r0
 6de:	0f 90       	pop	r0
 6e0:	df 91       	pop	r29
 6e2:	cf 91       	pop	r28
 6e4:	08 95       	ret

000006e6 <__udivmodsi4>:
 6e6:	a1 e2       	ldi	r26, 0x21	; 33
 6e8:	1a 2e       	mov	r1, r26
 6ea:	aa 1b       	sub	r26, r26
 6ec:	bb 1b       	sub	r27, r27
 6ee:	fd 01       	movw	r30, r26
 6f0:	0d c0       	rjmp	.+26     	; 0x70c <__udivmodsi4_ep>

000006f2 <__udivmodsi4_loop>:
 6f2:	aa 1f       	adc	r26, r26
 6f4:	bb 1f       	adc	r27, r27
 6f6:	ee 1f       	adc	r30, r30
 6f8:	ff 1f       	adc	r31, r31
 6fa:	a2 17       	cp	r26, r18
 6fc:	b3 07       	cpc	r27, r19
 6fe:	e4 07       	cpc	r30, r20
 700:	f5 07       	cpc	r31, r21
 702:	20 f0       	brcs	.+8      	; 0x70c <__udivmodsi4_ep>
 704:	a2 1b       	sub	r26, r18
 706:	b3 0b       	sbc	r27, r19
 708:	e4 0b       	sbc	r30, r20
 70a:	f5 0b       	sbc	r31, r21

0000070c <__udivmodsi4_ep>:
 70c:	66 1f       	adc	r22, r22
 70e:	77 1f       	adc	r23, r23
 710:	88 1f       	adc	r24, r24
 712:	99 1f       	adc	r25, r25
 714:	1a 94       	dec	r1
 716:	69 f7       	brne	.-38     	; 0x6f2 <__udivmodsi4_loop>
 718:	60 95       	com	r22
 71a:	70 95       	com	r23
 71c:	80 95       	com	r24
 71e:	90 95       	com	r25
 720:	9b 01       	movw	r18, r22
 722:	ac 01       	movw	r20, r24
 724:	bd 01       	movw	r22, r26
 726:	cf 01       	movw	r24, r30
 728:	08 95       	ret

0000072a <sprintf>:
 72a:	ae e0       	ldi	r26, 0x0E	; 14
 72c:	b0 e0       	ldi	r27, 0x00	; 0
 72e:	eb e9       	ldi	r30, 0x9B	; 155
 730:	f3 e0       	ldi	r31, 0x03	; 3
 732:	0c 94 56 06 	jmp	0xcac	; 0xcac <__prologue_saves__+0x1c>
 736:	0d 89       	ldd	r16, Y+21	; 0x15
 738:	1e 89       	ldd	r17, Y+22	; 0x16
 73a:	86 e0       	ldi	r24, 0x06	; 6
 73c:	8c 83       	std	Y+4, r24	; 0x04
 73e:	1a 83       	std	Y+2, r17	; 0x02
 740:	09 83       	std	Y+1, r16	; 0x01
 742:	8f ef       	ldi	r24, 0xFF	; 255
 744:	9f e7       	ldi	r25, 0x7F	; 127
 746:	9e 83       	std	Y+6, r25	; 0x06
 748:	8d 83       	std	Y+5, r24	; 0x05
 74a:	ae 01       	movw	r20, r28
 74c:	47 5e       	subi	r20, 0xE7	; 231
 74e:	5f 4f       	sbci	r21, 0xFF	; 255
 750:	6f 89       	ldd	r22, Y+23	; 0x17
 752:	78 8d       	ldd	r23, Y+24	; 0x18
 754:	ce 01       	movw	r24, r28
 756:	01 96       	adiw	r24, 0x01	; 1
 758:	0e 94 b7 03 	call	0x76e	; 0x76e <vfprintf>
 75c:	ef 81       	ldd	r30, Y+7	; 0x07
 75e:	f8 85       	ldd	r31, Y+8	; 0x08
 760:	e0 0f       	add	r30, r16
 762:	f1 1f       	adc	r31, r17
 764:	10 82       	st	Z, r1
 766:	2e 96       	adiw	r28, 0x0e	; 14
 768:	e4 e0       	ldi	r30, 0x04	; 4
 76a:	0c 94 72 06 	jmp	0xce4	; 0xce4 <__epilogue_restores__+0x1c>

0000076e <vfprintf>:
 76e:	ab e0       	ldi	r26, 0x0B	; 11
 770:	b0 e0       	ldi	r27, 0x00	; 0
 772:	ed eb       	ldi	r30, 0xBD	; 189
 774:	f3 e0       	ldi	r31, 0x03	; 3
 776:	0c 94 48 06 	jmp	0xc90	; 0xc90 <__prologue_saves__>
 77a:	6c 01       	movw	r12, r24
 77c:	7b 01       	movw	r14, r22
 77e:	8a 01       	movw	r16, r20
 780:	fc 01       	movw	r30, r24
 782:	17 82       	std	Z+7, r1	; 0x07
 784:	16 82       	std	Z+6, r1	; 0x06
 786:	83 81       	ldd	r24, Z+3	; 0x03
 788:	81 ff       	sbrs	r24, 1
 78a:	cc c1       	rjmp	.+920    	; 0xb24 <__stack+0x2c5>
 78c:	ce 01       	movw	r24, r28
 78e:	01 96       	adiw	r24, 0x01	; 1
 790:	3c 01       	movw	r6, r24
 792:	f6 01       	movw	r30, r12
 794:	93 81       	ldd	r25, Z+3	; 0x03
 796:	f7 01       	movw	r30, r14
 798:	93 fd       	sbrc	r25, 3
 79a:	85 91       	lpm	r24, Z+
 79c:	93 ff       	sbrs	r25, 3
 79e:	81 91       	ld	r24, Z+
 7a0:	7f 01       	movw	r14, r30
 7a2:	88 23       	and	r24, r24
 7a4:	09 f4       	brne	.+2      	; 0x7a8 <vfprintf+0x3a>
 7a6:	ba c1       	rjmp	.+884    	; 0xb1c <__stack+0x2bd>
 7a8:	85 32       	cpi	r24, 0x25	; 37
 7aa:	39 f4       	brne	.+14     	; 0x7ba <vfprintf+0x4c>
 7ac:	93 fd       	sbrc	r25, 3
 7ae:	85 91       	lpm	r24, Z+
 7b0:	93 ff       	sbrs	r25, 3
 7b2:	81 91       	ld	r24, Z+
 7b4:	7f 01       	movw	r14, r30
 7b6:	85 32       	cpi	r24, 0x25	; 37
 7b8:	29 f4       	brne	.+10     	; 0x7c4 <vfprintf+0x56>
 7ba:	b6 01       	movw	r22, r12
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	0e 94 ae 05 	call	0xb5c	; 0xb5c <fputc>
 7c2:	e7 cf       	rjmp	.-50     	; 0x792 <vfprintf+0x24>
 7c4:	91 2c       	mov	r9, r1
 7c6:	21 2c       	mov	r2, r1
 7c8:	31 2c       	mov	r3, r1
 7ca:	ff e1       	ldi	r31, 0x1F	; 31
 7cc:	f3 15       	cp	r31, r3
 7ce:	d8 f0       	brcs	.+54     	; 0x806 <vfprintf+0x98>
 7d0:	8b 32       	cpi	r24, 0x2B	; 43
 7d2:	79 f0       	breq	.+30     	; 0x7f2 <vfprintf+0x84>
 7d4:	38 f4       	brcc	.+14     	; 0x7e4 <vfprintf+0x76>
 7d6:	80 32       	cpi	r24, 0x20	; 32
 7d8:	79 f0       	breq	.+30     	; 0x7f8 <vfprintf+0x8a>
 7da:	83 32       	cpi	r24, 0x23	; 35
 7dc:	a1 f4       	brne	.+40     	; 0x806 <vfprintf+0x98>
 7de:	23 2d       	mov	r18, r3
 7e0:	20 61       	ori	r18, 0x10	; 16
 7e2:	1d c0       	rjmp	.+58     	; 0x81e <vfprintf+0xb0>
 7e4:	8d 32       	cpi	r24, 0x2D	; 45
 7e6:	61 f0       	breq	.+24     	; 0x800 <vfprintf+0x92>
 7e8:	80 33       	cpi	r24, 0x30	; 48
 7ea:	69 f4       	brne	.+26     	; 0x806 <vfprintf+0x98>
 7ec:	23 2d       	mov	r18, r3
 7ee:	21 60       	ori	r18, 0x01	; 1
 7f0:	16 c0       	rjmp	.+44     	; 0x81e <vfprintf+0xb0>
 7f2:	83 2d       	mov	r24, r3
 7f4:	82 60       	ori	r24, 0x02	; 2
 7f6:	38 2e       	mov	r3, r24
 7f8:	e3 2d       	mov	r30, r3
 7fa:	e4 60       	ori	r30, 0x04	; 4
 7fc:	3e 2e       	mov	r3, r30
 7fe:	2a c0       	rjmp	.+84     	; 0x854 <vfprintf+0xe6>
 800:	f3 2d       	mov	r31, r3
 802:	f8 60       	ori	r31, 0x08	; 8
 804:	1d c0       	rjmp	.+58     	; 0x840 <vfprintf+0xd2>
 806:	37 fc       	sbrc	r3, 7
 808:	2d c0       	rjmp	.+90     	; 0x864 <__stack+0x5>
 80a:	20 ed       	ldi	r18, 0xD0	; 208
 80c:	28 0f       	add	r18, r24
 80e:	2a 30       	cpi	r18, 0x0A	; 10
 810:	40 f0       	brcs	.+16     	; 0x822 <vfprintf+0xb4>
 812:	8e 32       	cpi	r24, 0x2E	; 46
 814:	b9 f4       	brne	.+46     	; 0x844 <vfprintf+0xd6>
 816:	36 fc       	sbrc	r3, 6
 818:	81 c1       	rjmp	.+770    	; 0xb1c <__stack+0x2bd>
 81a:	23 2d       	mov	r18, r3
 81c:	20 64       	ori	r18, 0x40	; 64
 81e:	32 2e       	mov	r3, r18
 820:	19 c0       	rjmp	.+50     	; 0x854 <vfprintf+0xe6>
 822:	36 fe       	sbrs	r3, 6
 824:	06 c0       	rjmp	.+12     	; 0x832 <vfprintf+0xc4>
 826:	8a e0       	ldi	r24, 0x0A	; 10
 828:	98 9e       	mul	r9, r24
 82a:	20 0d       	add	r18, r0
 82c:	11 24       	eor	r1, r1
 82e:	92 2e       	mov	r9, r18
 830:	11 c0       	rjmp	.+34     	; 0x854 <vfprintf+0xe6>
 832:	ea e0       	ldi	r30, 0x0A	; 10
 834:	2e 9e       	mul	r2, r30
 836:	20 0d       	add	r18, r0
 838:	11 24       	eor	r1, r1
 83a:	22 2e       	mov	r2, r18
 83c:	f3 2d       	mov	r31, r3
 83e:	f0 62       	ori	r31, 0x20	; 32
 840:	3f 2e       	mov	r3, r31
 842:	08 c0       	rjmp	.+16     	; 0x854 <vfprintf+0xe6>
 844:	8c 36       	cpi	r24, 0x6C	; 108
 846:	21 f4       	brne	.+8      	; 0x850 <vfprintf+0xe2>
 848:	83 2d       	mov	r24, r3
 84a:	80 68       	ori	r24, 0x80	; 128
 84c:	38 2e       	mov	r3, r24
 84e:	02 c0       	rjmp	.+4      	; 0x854 <vfprintf+0xe6>
 850:	88 36       	cpi	r24, 0x68	; 104
 852:	41 f4       	brne	.+16     	; 0x864 <__stack+0x5>
 854:	f7 01       	movw	r30, r14
 856:	93 fd       	sbrc	r25, 3
 858:	85 91       	lpm	r24, Z+
 85a:	93 ff       	sbrs	r25, 3
 85c:	81 91       	ld	r24, Z+
 85e:	7f 01       	movw	r14, r30
 860:	81 11       	cpse	r24, r1
 862:	b3 cf       	rjmp	.-154    	; 0x7ca <vfprintf+0x5c>
 864:	98 2f       	mov	r25, r24
 866:	9f 7d       	andi	r25, 0xDF	; 223
 868:	95 54       	subi	r25, 0x45	; 69
 86a:	93 30       	cpi	r25, 0x03	; 3
 86c:	28 f4       	brcc	.+10     	; 0x878 <__stack+0x19>
 86e:	0c 5f       	subi	r16, 0xFC	; 252
 870:	1f 4f       	sbci	r17, 0xFF	; 255
 872:	9f e3       	ldi	r25, 0x3F	; 63
 874:	99 83       	std	Y+1, r25	; 0x01
 876:	0d c0       	rjmp	.+26     	; 0x892 <__stack+0x33>
 878:	83 36       	cpi	r24, 0x63	; 99
 87a:	31 f0       	breq	.+12     	; 0x888 <__stack+0x29>
 87c:	83 37       	cpi	r24, 0x73	; 115
 87e:	71 f0       	breq	.+28     	; 0x89c <__stack+0x3d>
 880:	83 35       	cpi	r24, 0x53	; 83
 882:	09 f0       	breq	.+2      	; 0x886 <__stack+0x27>
 884:	59 c0       	rjmp	.+178    	; 0x938 <__stack+0xd9>
 886:	21 c0       	rjmp	.+66     	; 0x8ca <__stack+0x6b>
 888:	f8 01       	movw	r30, r16
 88a:	80 81       	ld	r24, Z
 88c:	89 83       	std	Y+1, r24	; 0x01
 88e:	0e 5f       	subi	r16, 0xFE	; 254
 890:	1f 4f       	sbci	r17, 0xFF	; 255
 892:	88 24       	eor	r8, r8
 894:	83 94       	inc	r8
 896:	91 2c       	mov	r9, r1
 898:	53 01       	movw	r10, r6
 89a:	13 c0       	rjmp	.+38     	; 0x8c2 <__stack+0x63>
 89c:	28 01       	movw	r4, r16
 89e:	f2 e0       	ldi	r31, 0x02	; 2
 8a0:	4f 0e       	add	r4, r31
 8a2:	51 1c       	adc	r5, r1
 8a4:	f8 01       	movw	r30, r16
 8a6:	a0 80       	ld	r10, Z
 8a8:	b1 80       	ldd	r11, Z+1	; 0x01
 8aa:	36 fe       	sbrs	r3, 6
 8ac:	03 c0       	rjmp	.+6      	; 0x8b4 <__stack+0x55>
 8ae:	69 2d       	mov	r22, r9
 8b0:	70 e0       	ldi	r23, 0x00	; 0
 8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <__stack+0x59>
 8b4:	6f ef       	ldi	r22, 0xFF	; 255
 8b6:	7f ef       	ldi	r23, 0xFF	; 255
 8b8:	c5 01       	movw	r24, r10
 8ba:	0e 94 a3 05 	call	0xb46	; 0xb46 <strnlen>
 8be:	4c 01       	movw	r8, r24
 8c0:	82 01       	movw	r16, r4
 8c2:	f3 2d       	mov	r31, r3
 8c4:	ff 77       	andi	r31, 0x7F	; 127
 8c6:	3f 2e       	mov	r3, r31
 8c8:	16 c0       	rjmp	.+44     	; 0x8f6 <__stack+0x97>
 8ca:	28 01       	movw	r4, r16
 8cc:	22 e0       	ldi	r18, 0x02	; 2
 8ce:	42 0e       	add	r4, r18
 8d0:	51 1c       	adc	r5, r1
 8d2:	f8 01       	movw	r30, r16
 8d4:	a0 80       	ld	r10, Z
 8d6:	b1 80       	ldd	r11, Z+1	; 0x01
 8d8:	36 fe       	sbrs	r3, 6
 8da:	03 c0       	rjmp	.+6      	; 0x8e2 <__stack+0x83>
 8dc:	69 2d       	mov	r22, r9
 8de:	70 e0       	ldi	r23, 0x00	; 0
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <__stack+0x87>
 8e2:	6f ef       	ldi	r22, 0xFF	; 255
 8e4:	7f ef       	ldi	r23, 0xFF	; 255
 8e6:	c5 01       	movw	r24, r10
 8e8:	0e 94 98 05 	call	0xb30	; 0xb30 <strnlen_P>
 8ec:	4c 01       	movw	r8, r24
 8ee:	f3 2d       	mov	r31, r3
 8f0:	f0 68       	ori	r31, 0x80	; 128
 8f2:	3f 2e       	mov	r3, r31
 8f4:	82 01       	movw	r16, r4
 8f6:	33 fc       	sbrc	r3, 3
 8f8:	1b c0       	rjmp	.+54     	; 0x930 <__stack+0xd1>
 8fa:	82 2d       	mov	r24, r2
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	88 16       	cp	r8, r24
 900:	99 06       	cpc	r9, r25
 902:	b0 f4       	brcc	.+44     	; 0x930 <__stack+0xd1>
 904:	b6 01       	movw	r22, r12
 906:	80 e2       	ldi	r24, 0x20	; 32
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	0e 94 ae 05 	call	0xb5c	; 0xb5c <fputc>
 90e:	2a 94       	dec	r2
 910:	f4 cf       	rjmp	.-24     	; 0x8fa <__stack+0x9b>
 912:	f5 01       	movw	r30, r10
 914:	37 fc       	sbrc	r3, 7
 916:	85 91       	lpm	r24, Z+
 918:	37 fe       	sbrs	r3, 7
 91a:	81 91       	ld	r24, Z+
 91c:	5f 01       	movw	r10, r30
 91e:	b6 01       	movw	r22, r12
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	0e 94 ae 05 	call	0xb5c	; 0xb5c <fputc>
 926:	21 10       	cpse	r2, r1
 928:	2a 94       	dec	r2
 92a:	21 e0       	ldi	r18, 0x01	; 1
 92c:	82 1a       	sub	r8, r18
 92e:	91 08       	sbc	r9, r1
 930:	81 14       	cp	r8, r1
 932:	91 04       	cpc	r9, r1
 934:	71 f7       	brne	.-36     	; 0x912 <__stack+0xb3>
 936:	e8 c0       	rjmp	.+464    	; 0xb08 <__stack+0x2a9>
 938:	84 36       	cpi	r24, 0x64	; 100
 93a:	11 f0       	breq	.+4      	; 0x940 <__stack+0xe1>
 93c:	89 36       	cpi	r24, 0x69	; 105
 93e:	41 f5       	brne	.+80     	; 0x990 <__stack+0x131>
 940:	f8 01       	movw	r30, r16
 942:	37 fe       	sbrs	r3, 7
 944:	07 c0       	rjmp	.+14     	; 0x954 <__stack+0xf5>
 946:	60 81       	ld	r22, Z
 948:	71 81       	ldd	r23, Z+1	; 0x01
 94a:	82 81       	ldd	r24, Z+2	; 0x02
 94c:	93 81       	ldd	r25, Z+3	; 0x03
 94e:	0c 5f       	subi	r16, 0xFC	; 252
 950:	1f 4f       	sbci	r17, 0xFF	; 255
 952:	08 c0       	rjmp	.+16     	; 0x964 <__stack+0x105>
 954:	60 81       	ld	r22, Z
 956:	71 81       	ldd	r23, Z+1	; 0x01
 958:	07 2e       	mov	r0, r23
 95a:	00 0c       	add	r0, r0
 95c:	88 0b       	sbc	r24, r24
 95e:	99 0b       	sbc	r25, r25
 960:	0e 5f       	subi	r16, 0xFE	; 254
 962:	1f 4f       	sbci	r17, 0xFF	; 255
 964:	f3 2d       	mov	r31, r3
 966:	ff 76       	andi	r31, 0x6F	; 111
 968:	3f 2e       	mov	r3, r31
 96a:	97 ff       	sbrs	r25, 7
 96c:	09 c0       	rjmp	.+18     	; 0x980 <__stack+0x121>
 96e:	90 95       	com	r25
 970:	80 95       	com	r24
 972:	70 95       	com	r23
 974:	61 95       	neg	r22
 976:	7f 4f       	sbci	r23, 0xFF	; 255
 978:	8f 4f       	sbci	r24, 0xFF	; 255
 97a:	9f 4f       	sbci	r25, 0xFF	; 255
 97c:	f0 68       	ori	r31, 0x80	; 128
 97e:	3f 2e       	mov	r3, r31
 980:	2a e0       	ldi	r18, 0x0A	; 10
 982:	30 e0       	ldi	r19, 0x00	; 0
 984:	a3 01       	movw	r20, r6
 986:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__ultoa_invert>
 98a:	88 2e       	mov	r8, r24
 98c:	86 18       	sub	r8, r6
 98e:	45 c0       	rjmp	.+138    	; 0xa1a <__stack+0x1bb>
 990:	85 37       	cpi	r24, 0x75	; 117
 992:	31 f4       	brne	.+12     	; 0x9a0 <__stack+0x141>
 994:	23 2d       	mov	r18, r3
 996:	2f 7e       	andi	r18, 0xEF	; 239
 998:	b2 2e       	mov	r11, r18
 99a:	2a e0       	ldi	r18, 0x0A	; 10
 99c:	30 e0       	ldi	r19, 0x00	; 0
 99e:	25 c0       	rjmp	.+74     	; 0x9ea <__stack+0x18b>
 9a0:	93 2d       	mov	r25, r3
 9a2:	99 7f       	andi	r25, 0xF9	; 249
 9a4:	b9 2e       	mov	r11, r25
 9a6:	8f 36       	cpi	r24, 0x6F	; 111
 9a8:	c1 f0       	breq	.+48     	; 0x9da <__stack+0x17b>
 9aa:	18 f4       	brcc	.+6      	; 0x9b2 <__stack+0x153>
 9ac:	88 35       	cpi	r24, 0x58	; 88
 9ae:	79 f0       	breq	.+30     	; 0x9ce <__stack+0x16f>
 9b0:	b5 c0       	rjmp	.+362    	; 0xb1c <__stack+0x2bd>
 9b2:	80 37       	cpi	r24, 0x70	; 112
 9b4:	19 f0       	breq	.+6      	; 0x9bc <__stack+0x15d>
 9b6:	88 37       	cpi	r24, 0x78	; 120
 9b8:	21 f0       	breq	.+8      	; 0x9c2 <__stack+0x163>
 9ba:	b0 c0       	rjmp	.+352    	; 0xb1c <__stack+0x2bd>
 9bc:	e9 2f       	mov	r30, r25
 9be:	e0 61       	ori	r30, 0x10	; 16
 9c0:	be 2e       	mov	r11, r30
 9c2:	b4 fe       	sbrs	r11, 4
 9c4:	0d c0       	rjmp	.+26     	; 0x9e0 <__stack+0x181>
 9c6:	fb 2d       	mov	r31, r11
 9c8:	f4 60       	ori	r31, 0x04	; 4
 9ca:	bf 2e       	mov	r11, r31
 9cc:	09 c0       	rjmp	.+18     	; 0x9e0 <__stack+0x181>
 9ce:	34 fe       	sbrs	r3, 4
 9d0:	0a c0       	rjmp	.+20     	; 0x9e6 <__stack+0x187>
 9d2:	29 2f       	mov	r18, r25
 9d4:	26 60       	ori	r18, 0x06	; 6
 9d6:	b2 2e       	mov	r11, r18
 9d8:	06 c0       	rjmp	.+12     	; 0x9e6 <__stack+0x187>
 9da:	28 e0       	ldi	r18, 0x08	; 8
 9dc:	30 e0       	ldi	r19, 0x00	; 0
 9de:	05 c0       	rjmp	.+10     	; 0x9ea <__stack+0x18b>
 9e0:	20 e1       	ldi	r18, 0x10	; 16
 9e2:	30 e0       	ldi	r19, 0x00	; 0
 9e4:	02 c0       	rjmp	.+4      	; 0x9ea <__stack+0x18b>
 9e6:	20 e1       	ldi	r18, 0x10	; 16
 9e8:	32 e0       	ldi	r19, 0x02	; 2
 9ea:	f8 01       	movw	r30, r16
 9ec:	b7 fe       	sbrs	r11, 7
 9ee:	07 c0       	rjmp	.+14     	; 0x9fe <__stack+0x19f>
 9f0:	60 81       	ld	r22, Z
 9f2:	71 81       	ldd	r23, Z+1	; 0x01
 9f4:	82 81       	ldd	r24, Z+2	; 0x02
 9f6:	93 81       	ldd	r25, Z+3	; 0x03
 9f8:	0c 5f       	subi	r16, 0xFC	; 252
 9fa:	1f 4f       	sbci	r17, 0xFF	; 255
 9fc:	06 c0       	rjmp	.+12     	; 0xa0a <__stack+0x1ab>
 9fe:	60 81       	ld	r22, Z
 a00:	71 81       	ldd	r23, Z+1	; 0x01
 a02:	80 e0       	ldi	r24, 0x00	; 0
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	0e 5f       	subi	r16, 0xFE	; 254
 a08:	1f 4f       	sbci	r17, 0xFF	; 255
 a0a:	a3 01       	movw	r20, r6
 a0c:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__ultoa_invert>
 a10:	88 2e       	mov	r8, r24
 a12:	86 18       	sub	r8, r6
 a14:	fb 2d       	mov	r31, r11
 a16:	ff 77       	andi	r31, 0x7F	; 127
 a18:	3f 2e       	mov	r3, r31
 a1a:	36 fe       	sbrs	r3, 6
 a1c:	0d c0       	rjmp	.+26     	; 0xa38 <__stack+0x1d9>
 a1e:	23 2d       	mov	r18, r3
 a20:	2e 7f       	andi	r18, 0xFE	; 254
 a22:	a2 2e       	mov	r10, r18
 a24:	89 14       	cp	r8, r9
 a26:	58 f4       	brcc	.+22     	; 0xa3e <__stack+0x1df>
 a28:	34 fe       	sbrs	r3, 4
 a2a:	0b c0       	rjmp	.+22     	; 0xa42 <__stack+0x1e3>
 a2c:	32 fc       	sbrc	r3, 2
 a2e:	09 c0       	rjmp	.+18     	; 0xa42 <__stack+0x1e3>
 a30:	83 2d       	mov	r24, r3
 a32:	8e 7e       	andi	r24, 0xEE	; 238
 a34:	a8 2e       	mov	r10, r24
 a36:	05 c0       	rjmp	.+10     	; 0xa42 <__stack+0x1e3>
 a38:	b8 2c       	mov	r11, r8
 a3a:	a3 2c       	mov	r10, r3
 a3c:	03 c0       	rjmp	.+6      	; 0xa44 <__stack+0x1e5>
 a3e:	b8 2c       	mov	r11, r8
 a40:	01 c0       	rjmp	.+2      	; 0xa44 <__stack+0x1e5>
 a42:	b9 2c       	mov	r11, r9
 a44:	a4 fe       	sbrs	r10, 4
 a46:	0f c0       	rjmp	.+30     	; 0xa66 <__stack+0x207>
 a48:	fe 01       	movw	r30, r28
 a4a:	e8 0d       	add	r30, r8
 a4c:	f1 1d       	adc	r31, r1
 a4e:	80 81       	ld	r24, Z
 a50:	80 33       	cpi	r24, 0x30	; 48
 a52:	21 f4       	brne	.+8      	; 0xa5c <__stack+0x1fd>
 a54:	9a 2d       	mov	r25, r10
 a56:	99 7e       	andi	r25, 0xE9	; 233
 a58:	a9 2e       	mov	r10, r25
 a5a:	09 c0       	rjmp	.+18     	; 0xa6e <__stack+0x20f>
 a5c:	a2 fe       	sbrs	r10, 2
 a5e:	06 c0       	rjmp	.+12     	; 0xa6c <__stack+0x20d>
 a60:	b3 94       	inc	r11
 a62:	b3 94       	inc	r11
 a64:	04 c0       	rjmp	.+8      	; 0xa6e <__stack+0x20f>
 a66:	8a 2d       	mov	r24, r10
 a68:	86 78       	andi	r24, 0x86	; 134
 a6a:	09 f0       	breq	.+2      	; 0xa6e <__stack+0x20f>
 a6c:	b3 94       	inc	r11
 a6e:	a3 fc       	sbrc	r10, 3
 a70:	11 c0       	rjmp	.+34     	; 0xa94 <__stack+0x235>
 a72:	a0 fe       	sbrs	r10, 0
 a74:	06 c0       	rjmp	.+12     	; 0xa82 <__stack+0x223>
 a76:	b2 14       	cp	r11, r2
 a78:	88 f4       	brcc	.+34     	; 0xa9c <__stack+0x23d>
 a7a:	28 0c       	add	r2, r8
 a7c:	92 2c       	mov	r9, r2
 a7e:	9b 18       	sub	r9, r11
 a80:	0e c0       	rjmp	.+28     	; 0xa9e <__stack+0x23f>
 a82:	b2 14       	cp	r11, r2
 a84:	60 f4       	brcc	.+24     	; 0xa9e <__stack+0x23f>
 a86:	b6 01       	movw	r22, r12
 a88:	80 e2       	ldi	r24, 0x20	; 32
 a8a:	90 e0       	ldi	r25, 0x00	; 0
 a8c:	0e 94 ae 05 	call	0xb5c	; 0xb5c <fputc>
 a90:	b3 94       	inc	r11
 a92:	f7 cf       	rjmp	.-18     	; 0xa82 <__stack+0x223>
 a94:	b2 14       	cp	r11, r2
 a96:	18 f4       	brcc	.+6      	; 0xa9e <__stack+0x23f>
 a98:	2b 18       	sub	r2, r11
 a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <__stack+0x241>
 a9c:	98 2c       	mov	r9, r8
 a9e:	21 2c       	mov	r2, r1
 aa0:	a4 fe       	sbrs	r10, 4
 aa2:	10 c0       	rjmp	.+32     	; 0xac4 <__stack+0x265>
 aa4:	b6 01       	movw	r22, r12
 aa6:	80 e3       	ldi	r24, 0x30	; 48
 aa8:	90 e0       	ldi	r25, 0x00	; 0
 aaa:	0e 94 ae 05 	call	0xb5c	; 0xb5c <fputc>
 aae:	a2 fe       	sbrs	r10, 2
 ab0:	17 c0       	rjmp	.+46     	; 0xae0 <__stack+0x281>
 ab2:	a1 fc       	sbrc	r10, 1
 ab4:	03 c0       	rjmp	.+6      	; 0xabc <__stack+0x25d>
 ab6:	88 e7       	ldi	r24, 0x78	; 120
 ab8:	90 e0       	ldi	r25, 0x00	; 0
 aba:	02 c0       	rjmp	.+4      	; 0xac0 <__stack+0x261>
 abc:	88 e5       	ldi	r24, 0x58	; 88
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	b6 01       	movw	r22, r12
 ac2:	0c c0       	rjmp	.+24     	; 0xadc <__stack+0x27d>
 ac4:	8a 2d       	mov	r24, r10
 ac6:	86 78       	andi	r24, 0x86	; 134
 ac8:	59 f0       	breq	.+22     	; 0xae0 <__stack+0x281>
 aca:	a1 fe       	sbrs	r10, 1
 acc:	02 c0       	rjmp	.+4      	; 0xad2 <__stack+0x273>
 ace:	8b e2       	ldi	r24, 0x2B	; 43
 ad0:	01 c0       	rjmp	.+2      	; 0xad4 <__stack+0x275>
 ad2:	80 e2       	ldi	r24, 0x20	; 32
 ad4:	a7 fc       	sbrc	r10, 7
 ad6:	8d e2       	ldi	r24, 0x2D	; 45
 ad8:	b6 01       	movw	r22, r12
 ada:	90 e0       	ldi	r25, 0x00	; 0
 adc:	0e 94 ae 05 	call	0xb5c	; 0xb5c <fputc>
 ae0:	89 14       	cp	r8, r9
 ae2:	38 f4       	brcc	.+14     	; 0xaf2 <__stack+0x293>
 ae4:	b6 01       	movw	r22, r12
 ae6:	80 e3       	ldi	r24, 0x30	; 48
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	0e 94 ae 05 	call	0xb5c	; 0xb5c <fputc>
 aee:	9a 94       	dec	r9
 af0:	f7 cf       	rjmp	.-18     	; 0xae0 <__stack+0x281>
 af2:	8a 94       	dec	r8
 af4:	f3 01       	movw	r30, r6
 af6:	e8 0d       	add	r30, r8
 af8:	f1 1d       	adc	r31, r1
 afa:	80 81       	ld	r24, Z
 afc:	b6 01       	movw	r22, r12
 afe:	90 e0       	ldi	r25, 0x00	; 0
 b00:	0e 94 ae 05 	call	0xb5c	; 0xb5c <fputc>
 b04:	81 10       	cpse	r8, r1
 b06:	f5 cf       	rjmp	.-22     	; 0xaf2 <__stack+0x293>
 b08:	22 20       	and	r2, r2
 b0a:	09 f4       	brne	.+2      	; 0xb0e <__stack+0x2af>
 b0c:	42 ce       	rjmp	.-892    	; 0x792 <vfprintf+0x24>
 b0e:	b6 01       	movw	r22, r12
 b10:	80 e2       	ldi	r24, 0x20	; 32
 b12:	90 e0       	ldi	r25, 0x00	; 0
 b14:	0e 94 ae 05 	call	0xb5c	; 0xb5c <fputc>
 b18:	2a 94       	dec	r2
 b1a:	f6 cf       	rjmp	.-20     	; 0xb08 <__stack+0x2a9>
 b1c:	f6 01       	movw	r30, r12
 b1e:	86 81       	ldd	r24, Z+6	; 0x06
 b20:	97 81       	ldd	r25, Z+7	; 0x07
 b22:	02 c0       	rjmp	.+4      	; 0xb28 <__stack+0x2c9>
 b24:	8f ef       	ldi	r24, 0xFF	; 255
 b26:	9f ef       	ldi	r25, 0xFF	; 255
 b28:	2b 96       	adiw	r28, 0x0b	; 11
 b2a:	e2 e1       	ldi	r30, 0x12	; 18
 b2c:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__epilogue_restores__>

00000b30 <strnlen_P>:
 b30:	fc 01       	movw	r30, r24
 b32:	05 90       	lpm	r0, Z+
 b34:	61 50       	subi	r22, 0x01	; 1
 b36:	70 40       	sbci	r23, 0x00	; 0
 b38:	01 10       	cpse	r0, r1
 b3a:	d8 f7       	brcc	.-10     	; 0xb32 <strnlen_P+0x2>
 b3c:	80 95       	com	r24
 b3e:	90 95       	com	r25
 b40:	8e 0f       	add	r24, r30
 b42:	9f 1f       	adc	r25, r31
 b44:	08 95       	ret

00000b46 <strnlen>:
 b46:	fc 01       	movw	r30, r24
 b48:	61 50       	subi	r22, 0x01	; 1
 b4a:	70 40       	sbci	r23, 0x00	; 0
 b4c:	01 90       	ld	r0, Z+
 b4e:	01 10       	cpse	r0, r1
 b50:	d8 f7       	brcc	.-10     	; 0xb48 <strnlen+0x2>
 b52:	80 95       	com	r24
 b54:	90 95       	com	r25
 b56:	8e 0f       	add	r24, r30
 b58:	9f 1f       	adc	r25, r31
 b5a:	08 95       	ret

00000b5c <fputc>:
 b5c:	0f 93       	push	r16
 b5e:	1f 93       	push	r17
 b60:	cf 93       	push	r28
 b62:	df 93       	push	r29
 b64:	fb 01       	movw	r30, r22
 b66:	23 81       	ldd	r18, Z+3	; 0x03
 b68:	21 fd       	sbrc	r18, 1
 b6a:	03 c0       	rjmp	.+6      	; 0xb72 <fputc+0x16>
 b6c:	8f ef       	ldi	r24, 0xFF	; 255
 b6e:	9f ef       	ldi	r25, 0xFF	; 255
 b70:	2c c0       	rjmp	.+88     	; 0xbca <fputc+0x6e>
 b72:	22 ff       	sbrs	r18, 2
 b74:	16 c0       	rjmp	.+44     	; 0xba2 <fputc+0x46>
 b76:	46 81       	ldd	r20, Z+6	; 0x06
 b78:	57 81       	ldd	r21, Z+7	; 0x07
 b7a:	24 81       	ldd	r18, Z+4	; 0x04
 b7c:	35 81       	ldd	r19, Z+5	; 0x05
 b7e:	42 17       	cp	r20, r18
 b80:	53 07       	cpc	r21, r19
 b82:	44 f4       	brge	.+16     	; 0xb94 <fputc+0x38>
 b84:	a0 81       	ld	r26, Z
 b86:	b1 81       	ldd	r27, Z+1	; 0x01
 b88:	9d 01       	movw	r18, r26
 b8a:	2f 5f       	subi	r18, 0xFF	; 255
 b8c:	3f 4f       	sbci	r19, 0xFF	; 255
 b8e:	31 83       	std	Z+1, r19	; 0x01
 b90:	20 83       	st	Z, r18
 b92:	8c 93       	st	X, r24
 b94:	26 81       	ldd	r18, Z+6	; 0x06
 b96:	37 81       	ldd	r19, Z+7	; 0x07
 b98:	2f 5f       	subi	r18, 0xFF	; 255
 b9a:	3f 4f       	sbci	r19, 0xFF	; 255
 b9c:	37 83       	std	Z+7, r19	; 0x07
 b9e:	26 83       	std	Z+6, r18	; 0x06
 ba0:	14 c0       	rjmp	.+40     	; 0xbca <fputc+0x6e>
 ba2:	8b 01       	movw	r16, r22
 ba4:	ec 01       	movw	r28, r24
 ba6:	fb 01       	movw	r30, r22
 ba8:	00 84       	ldd	r0, Z+8	; 0x08
 baa:	f1 85       	ldd	r31, Z+9	; 0x09
 bac:	e0 2d       	mov	r30, r0
 bae:	09 95       	icall
 bb0:	89 2b       	or	r24, r25
 bb2:	e1 f6       	brne	.-72     	; 0xb6c <fputc+0x10>
 bb4:	d8 01       	movw	r26, r16
 bb6:	16 96       	adiw	r26, 0x06	; 6
 bb8:	8d 91       	ld	r24, X+
 bba:	9c 91       	ld	r25, X
 bbc:	17 97       	sbiw	r26, 0x07	; 7
 bbe:	01 96       	adiw	r24, 0x01	; 1
 bc0:	17 96       	adiw	r26, 0x07	; 7
 bc2:	9c 93       	st	X, r25
 bc4:	8e 93       	st	-X, r24
 bc6:	16 97       	sbiw	r26, 0x06	; 6
 bc8:	ce 01       	movw	r24, r28
 bca:	df 91       	pop	r29
 bcc:	cf 91       	pop	r28
 bce:	1f 91       	pop	r17
 bd0:	0f 91       	pop	r16
 bd2:	08 95       	ret

00000bd4 <__ultoa_invert>:
 bd4:	fa 01       	movw	r30, r20
 bd6:	aa 27       	eor	r26, r26
 bd8:	28 30       	cpi	r18, 0x08	; 8
 bda:	51 f1       	breq	.+84     	; 0xc30 <__ultoa_invert+0x5c>
 bdc:	20 31       	cpi	r18, 0x10	; 16
 bde:	81 f1       	breq	.+96     	; 0xc40 <__ultoa_invert+0x6c>
 be0:	e8 94       	clt
 be2:	6f 93       	push	r22
 be4:	6e 7f       	andi	r22, 0xFE	; 254
 be6:	6e 5f       	subi	r22, 0xFE	; 254
 be8:	7f 4f       	sbci	r23, 0xFF	; 255
 bea:	8f 4f       	sbci	r24, 0xFF	; 255
 bec:	9f 4f       	sbci	r25, 0xFF	; 255
 bee:	af 4f       	sbci	r26, 0xFF	; 255
 bf0:	b1 e0       	ldi	r27, 0x01	; 1
 bf2:	3e d0       	rcall	.+124    	; 0xc70 <__ultoa_invert+0x9c>
 bf4:	b4 e0       	ldi	r27, 0x04	; 4
 bf6:	3c d0       	rcall	.+120    	; 0xc70 <__ultoa_invert+0x9c>
 bf8:	67 0f       	add	r22, r23
 bfa:	78 1f       	adc	r23, r24
 bfc:	89 1f       	adc	r24, r25
 bfe:	9a 1f       	adc	r25, r26
 c00:	a1 1d       	adc	r26, r1
 c02:	68 0f       	add	r22, r24
 c04:	79 1f       	adc	r23, r25
 c06:	8a 1f       	adc	r24, r26
 c08:	91 1d       	adc	r25, r1
 c0a:	a1 1d       	adc	r26, r1
 c0c:	6a 0f       	add	r22, r26
 c0e:	71 1d       	adc	r23, r1
 c10:	81 1d       	adc	r24, r1
 c12:	91 1d       	adc	r25, r1
 c14:	a1 1d       	adc	r26, r1
 c16:	20 d0       	rcall	.+64     	; 0xc58 <__ultoa_invert+0x84>
 c18:	09 f4       	brne	.+2      	; 0xc1c <__ultoa_invert+0x48>
 c1a:	68 94       	set
 c1c:	3f 91       	pop	r19
 c1e:	2a e0       	ldi	r18, 0x0A	; 10
 c20:	26 9f       	mul	r18, r22
 c22:	11 24       	eor	r1, r1
 c24:	30 19       	sub	r19, r0
 c26:	30 5d       	subi	r19, 0xD0	; 208
 c28:	31 93       	st	Z+, r19
 c2a:	de f6       	brtc	.-74     	; 0xbe2 <__ultoa_invert+0xe>
 c2c:	cf 01       	movw	r24, r30
 c2e:	08 95       	ret
 c30:	46 2f       	mov	r20, r22
 c32:	47 70       	andi	r20, 0x07	; 7
 c34:	40 5d       	subi	r20, 0xD0	; 208
 c36:	41 93       	st	Z+, r20
 c38:	b3 e0       	ldi	r27, 0x03	; 3
 c3a:	0f d0       	rcall	.+30     	; 0xc5a <__ultoa_invert+0x86>
 c3c:	c9 f7       	brne	.-14     	; 0xc30 <__ultoa_invert+0x5c>
 c3e:	f6 cf       	rjmp	.-20     	; 0xc2c <__ultoa_invert+0x58>
 c40:	46 2f       	mov	r20, r22
 c42:	4f 70       	andi	r20, 0x0F	; 15
 c44:	40 5d       	subi	r20, 0xD0	; 208
 c46:	4a 33       	cpi	r20, 0x3A	; 58
 c48:	18 f0       	brcs	.+6      	; 0xc50 <__ultoa_invert+0x7c>
 c4a:	49 5d       	subi	r20, 0xD9	; 217
 c4c:	31 fd       	sbrc	r19, 1
 c4e:	40 52       	subi	r20, 0x20	; 32
 c50:	41 93       	st	Z+, r20
 c52:	02 d0       	rcall	.+4      	; 0xc58 <__ultoa_invert+0x84>
 c54:	a9 f7       	brne	.-22     	; 0xc40 <__ultoa_invert+0x6c>
 c56:	ea cf       	rjmp	.-44     	; 0xc2c <__ultoa_invert+0x58>
 c58:	b4 e0       	ldi	r27, 0x04	; 4
 c5a:	a6 95       	lsr	r26
 c5c:	97 95       	ror	r25
 c5e:	87 95       	ror	r24
 c60:	77 95       	ror	r23
 c62:	67 95       	ror	r22
 c64:	ba 95       	dec	r27
 c66:	c9 f7       	brne	.-14     	; 0xc5a <__ultoa_invert+0x86>
 c68:	00 97       	sbiw	r24, 0x00	; 0
 c6a:	61 05       	cpc	r22, r1
 c6c:	71 05       	cpc	r23, r1
 c6e:	08 95       	ret
 c70:	9b 01       	movw	r18, r22
 c72:	ac 01       	movw	r20, r24
 c74:	0a 2e       	mov	r0, r26
 c76:	06 94       	lsr	r0
 c78:	57 95       	ror	r21
 c7a:	47 95       	ror	r20
 c7c:	37 95       	ror	r19
 c7e:	27 95       	ror	r18
 c80:	ba 95       	dec	r27
 c82:	c9 f7       	brne	.-14     	; 0xc76 <__ultoa_invert+0xa2>
 c84:	62 0f       	add	r22, r18
 c86:	73 1f       	adc	r23, r19
 c88:	84 1f       	adc	r24, r20
 c8a:	95 1f       	adc	r25, r21
 c8c:	a0 1d       	adc	r26, r0
 c8e:	08 95       	ret

00000c90 <__prologue_saves__>:
 c90:	2f 92       	push	r2
 c92:	3f 92       	push	r3
 c94:	4f 92       	push	r4
 c96:	5f 92       	push	r5
 c98:	6f 92       	push	r6
 c9a:	7f 92       	push	r7
 c9c:	8f 92       	push	r8
 c9e:	9f 92       	push	r9
 ca0:	af 92       	push	r10
 ca2:	bf 92       	push	r11
 ca4:	cf 92       	push	r12
 ca6:	df 92       	push	r13
 ca8:	ef 92       	push	r14
 caa:	ff 92       	push	r15
 cac:	0f 93       	push	r16
 cae:	1f 93       	push	r17
 cb0:	cf 93       	push	r28
 cb2:	df 93       	push	r29
 cb4:	cd b7       	in	r28, 0x3d	; 61
 cb6:	de b7       	in	r29, 0x3e	; 62
 cb8:	ca 1b       	sub	r28, r26
 cba:	db 0b       	sbc	r29, r27
 cbc:	0f b6       	in	r0, 0x3f	; 63
 cbe:	f8 94       	cli
 cc0:	de bf       	out	0x3e, r29	; 62
 cc2:	0f be       	out	0x3f, r0	; 63
 cc4:	cd bf       	out	0x3d, r28	; 61
 cc6:	09 94       	ijmp

00000cc8 <__epilogue_restores__>:
 cc8:	2a 88       	ldd	r2, Y+18	; 0x12
 cca:	39 88       	ldd	r3, Y+17	; 0x11
 ccc:	48 88       	ldd	r4, Y+16	; 0x10
 cce:	5f 84       	ldd	r5, Y+15	; 0x0f
 cd0:	6e 84       	ldd	r6, Y+14	; 0x0e
 cd2:	7d 84       	ldd	r7, Y+13	; 0x0d
 cd4:	8c 84       	ldd	r8, Y+12	; 0x0c
 cd6:	9b 84       	ldd	r9, Y+11	; 0x0b
 cd8:	aa 84       	ldd	r10, Y+10	; 0x0a
 cda:	b9 84       	ldd	r11, Y+9	; 0x09
 cdc:	c8 84       	ldd	r12, Y+8	; 0x08
 cde:	df 80       	ldd	r13, Y+7	; 0x07
 ce0:	ee 80       	ldd	r14, Y+6	; 0x06
 ce2:	fd 80       	ldd	r15, Y+5	; 0x05
 ce4:	0c 81       	ldd	r16, Y+4	; 0x04
 ce6:	1b 81       	ldd	r17, Y+3	; 0x03
 ce8:	aa 81       	ldd	r26, Y+2	; 0x02
 cea:	b9 81       	ldd	r27, Y+1	; 0x01
 cec:	ce 0f       	add	r28, r30
 cee:	d1 1d       	adc	r29, r1
 cf0:	0f b6       	in	r0, 0x3f	; 63
 cf2:	f8 94       	cli
 cf4:	de bf       	out	0x3e, r29	; 62
 cf6:	0f be       	out	0x3f, r0	; 63
 cf8:	cd bf       	out	0x3d, r28	; 61
 cfa:	ed 01       	movw	r28, r26
 cfc:	08 95       	ret

00000cfe <_exit>:
 cfe:	f8 94       	cli

00000d00 <__stop_program>:
 d00:	ff cf       	rjmp	.-2      	; 0xd00 <__stop_program>
